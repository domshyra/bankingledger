@using BankingLedger.ViewModels
@model List<LedgerAccountViewModel>


@{
    ViewBag.Title = "Accounts";
}

<script src="~/js/promise.js"></script>
<script>
    $(function () {
        $("button[name='ballance-change-btn']").on("click", function (e) {
            var element = $(this);
            var elementId = element.attr("id");
            var input = $("#" + elementId + "-input");
            var value = $("#" + elementId + "-input").val();
            if (elementId.includes("deposit")) {
                var accountId = elementId.replace("deposit-", "");
                var ballanceId = "#ballance-" + accountId;
                deposit(accountId, value, ballanceId);
            }
            else {
                var accountId = elementId.replace("withdrawal-", "");
                var ballanceId = "#ballance-" + accountId;
                withdrawal(accountId, value, ballanceId);
            }
            input.val('');
        });
    });
    function withdrawal(accountId, amount, elementId) {
        var url = makeURLString("@Url.Action("MakeWithdrawal", "LedgerAccount")", accountId, amount);
        getJSON(url).then(function (result) {
            if (result.Success) {
                parseBallance(result.Ballance, elementId);
                updateDepositHistory(accountId);
            }
            else {
                $("#withdrawal-error").html(result.Ballance);
                $("#withdrawal-alert").modal('show')
            }
        }, function (error) {
            console.log("Error withdrawal", error);
        });
    };
    function deposit(accountId, amount, elementId) {
        //update summary chart, spec char, and spec grid
        var url = makeURLString("@Url.Action("MakeDeposit", "LedgerAccount")", accountId, amount);
        getJSON(url).then(function (result) {
            parseBallance(result, elementId);
            updateDepositHistory(accountId);
        }, function (error) {
            console.log("Error deposit", error);
        });
    };
    function makeURLString(url, accountId, amount) {
        return url + "?accountId=" + accountId + "&amount=" + amount;
    };
    function parseBallance(ballance, id) {
        $(id).html(ballance);
    }
    function updateDepositHistory(accountId) {

        $.ajax({
            url: "@Url.Action("GetDepositHistory", "LedgerAccount")?accountId=" + accountId,
            data: {
                accountId: accountId
            },
            dataType: "html",
            contentType: "application/json;",
            success: function (data) {
                var id = "#history-" + accountId;
                $(id).html(data);
            },
            error: function (passParams) {
                console.log("Error in updateDepositHistory ajax call.");
                console.log(passParams);
            }
        });
    }
</script>

<div class="containter">

    <div class="modal" tabindex="-1" role="dialog" id="withdrawal-alert">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Error</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <h5 class="text-danger">Insufficient funds.</h5>
                    <p>Ballance is only <txt id="withdrawal-error"></txt>.</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
    <h3 class="pb-3 mb-2">
        Accounts
        <a class="btn btn-primary float-right" role="button" href='@Url.Action("CreateNewAccount", "LedgerAccount")'>Create new account</a>
    </h3>
    <div class="row">

        @if (Model.Count == 0)
        {
            <div class="col-12">
                <p>Looks like you don't have an account yet. Would you like to <a href='@Url.Action("CreateNewAccount", "LedgerAccount")' class="text-primary">create a new one</a>?</p>
            </div>
        }

        @foreach (LedgerAccountViewModel account in Model)
        {
            <div class="col-12 col-md-6 mb-2 pb-2">
                <div class="card">
                    <div class="card-header font-weight-bold">
                        @account.Name
                    </div>
                    <div class="card-body">
                        <div class="row mb-2 py-2">
                            <div class="col-6">
                                <h5 class="card-title mb-3 text-muted font-weight-light">Ballance</h5>
                            </div>
                            <div class="col-6">
                                <h5 class="card-title text-right" id="ballance-@account.AccountId">@account.Balance</h5>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-6">
                                <div class="input-group mb-3">
                                    <div class="input-group-prepend">
                                        <button class="btn btn-outline-success" type="button" id="deposit-@account.AccountId" name="ballance-change-btn">Deposit</button>
                                    </div>
                                    <input type="number" step="0.01" id="deposit-@account.AccountId-input" min=0 class="form-control" placeholder="0.00" aria-label="deposit" aria-describedby="deposit">
                                </div>
                            </div>
                            <div class="col-6">
                                <div class="input-group mb-3">
                                    <input type="number" step="0.01" min="0" class="form-control" id="withdrawal-@account.AccountId-input" placeholder="0.00" aria-label="withdrawal" aria-describedby="withdrawal">
                                    <div class="input-group-append">
                                        <button class="btn btn-outline-danger" type="button" id="withdrawal-@account.AccountId" name="ballance-change-btn">withdrawal</button>
                                    </div>
                                </div>

                            </div>
                        </div>
                        <div class="row">
                            <div class="col-12">
                                <a data-toggle="collapse" data-target="#collapseHistory-@account.AccountId" class="text-right nodecoration" href="#">Show transaction history <i class="fas fa-chevron-down pl-1"></i></a>
                            </div>
                        </div>
                        <div class="collapse" id="collapseHistory-@account.AccountId">
                            <div class="row">
                                <div class="col-12 py-1 mt-3">
                                    <div id="history-@account.AccountId">
                                        <partial name="_DepositHistory" model="account.DepositHistory" />

                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>


                </div>
            </div>
        }
    </div>
</div>
